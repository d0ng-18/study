<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">

    <context:component-scan base-package="com.slayerd09"/>
<!--    <bean id="afterLog" class="com.slayerd09.log.AfterLog"/>-->
<!--    <bean id="beforeLog" class="com.slayerd09.log.BeforeLog"/>-->
<!--    <bean id="testServiceImpl" class="com.slayerd09.service.impl.TestServiceImpl"/>-->
    <!--方式一,无切面-->
<!--    <aop:config>-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.slayerd09.service.impl.TestServiceImpl.*(..))"/>-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->
    <!--方式二，建立一个切面-->
<!--    <bean id="pointcut" class="com.slayerd09.diy.PointCut"/>-->
<!--    <aop:config>-->
<!--        <aop:aspect ref="pointcut">-->
<!--            <aop:pointcut id="point" expression="execution(* com.slayerd09.service.impl.TestServiceImpl.*(..))"/>-->
<!--            <aop:after method="afterMethod" pointcut-ref="point"/>-->
<!--            <aop:before method="beforeMethod" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->
    <!--方式三,注解实现AOP-->
    <bean id="annotationPointCut" class="com.slayerd09.diy.AnnotationPointCut"/>
    <!--expose-proxy默认是false,如果是false,则用的jdk,true则用的cglib-->
    <aop:aspectj-autoproxy expose-proxy="false"/>
</beans>